@model Project.Models.scholarshipdetail

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Student Details</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.student_Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Marks, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Marks, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Marks, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Grade, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Grade, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Grade, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DemoCourse, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DemoCourse, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DemoCourse, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.College, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.College, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.College, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.approvedbyScholarshipProvider, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.approvedbyScholarshipProvider, new List<SelectListItem>
                {

                    new SelectListItem{Text="Approved",Value="Approved"},
                    new SelectListItem{Text="Rejected",Value="Rejected"}
                   


                }, "Select", new { htmlAttributes = new { @class = "form-control" }, style = "width: 300px;height:35px;border-radius: 50px;color:black;" })
                <div>
                    @Html.ValidationMessageFor(model => model.approvedbyScholarshipProvider, "", new { @class = "text-danger" })
                </div>
            </div>


        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.approvedbyInstitution, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.approvedbyInstitution, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.approvedbyInstitution, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "ApprovedScholarshipRequest")
</div>

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Project.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.DataAnnotations.Schema;

    public partial class Registration
    {
        
        [Display(Name = "User ID")]
        public int User_id { get; set; }

        [Required]
        [Display(Name = "First Name")]
        public string FirstName { get; set; }

        [Required]
        [Display(Name = "Last Name")]
        public string LastName { get; set; }

        [Required]
        [Display(Name = "Date of Birth")]
        public System.DateTime DateofBirth { get; set; }

        [Required(AllowEmptyStrings =false,ErrorMessage ="* Required")]
        [Display(Name = "Gender")]
        public string Gender { get; set; }

        
        [Display(Name = "Contact")]
        [RegularExpression(@"^(\d{10})$", ErrorMessage = "Wrong mobile number")]
        public long Contact { get; set; }

        [Required]
        [RegularExpression("^[a-zA-Z0-9_\\.-]+@([a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,6}$", ErrorMessage = "E-mail is not valid")]
        [Display(Name = "Email")]
        public string Email { get; set; }

        [Required]
        [Display(Name = "Category")]
        public string User_category { get; set; }

        [Required]
        [Display(Name = "Password")]
        [StringLength(255, ErrorMessage = "Must be of length 8 or more than 8", MinimumLength = 8)]
        public string user_password { get; set; }

        [Required]
        [Display(Name = "Favorite Pet")]
        public string FavouritePet { get; set; }

        [Required]
        [Display(Name = "Favorite movie")]
        public string FavouriteMovie { get; set; }

        [Required]
            
        [Display(Name = "Lucky number")]
        public int LuckyNumber { get; set; }

        public Nullable<int> approvedByProvider { get; set; }
        public Nullable<int> approvedByInstitution { get; set; }
    }
}
